{"version":3,"sources":["lib/Fetch.js","components/comments-list/index.js","components/comments-list/comments-list.js","components/posts-detail/index.js","components/posts-detail/posts-detail.js","components/posts-detail-page/posts-detail-page.js","components/posts-detail-page/index.js"],"names":["axios__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","Fetch","n","axios","create","baseURL","CommentsList","props","id","_useState","useState","_useState2","Object","slicedToArray","data","setData","fetchData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","concat","sent","status","stop","apply","this","arguments","useEffect","react_default","createElement","className","map","item","key","name","email","body","PostsDetail","title","components_comments_list","PostsDetailPage","match","components_posts_detail","params"],"mappings":"yFAAA,IAAAA,EAAAC,EAAA,IAMMC,EANND,EAAAE,EAAAH,GAMcI,EAAMC,OAJJ,CACdC,QAAS,0CAKIJ,0LCNAK,SCGM,SAACC,GAAU,IACtBC,EAAOD,EAAPC,GADsBC,EAENC,mBAAS,IAFHC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEvBK,EAFuBH,EAAA,GAEjBI,EAFiBJ,EAAA,GAIxBK,EAAS,eAAAC,EAAAL,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACO1B,YAAK,oBAAA2B,OAAqBpB,IADjC,OAGQ,OAFlBe,EADUE,EAAAI,MAGHC,QAAgBf,EAAQQ,EAAST,MAH9B,wBAAAW,EAAAM,SAAAT,MAAH,yBAAAL,EAAAe,MAAAC,KAAAC,YAAA,GAQf,OAFAC,oBAAU,WAAQnB,KAAgB,IAGhCoB,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,iBACZxB,EAAKyB,IAAI,SAAAC,GAAI,OACZJ,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,sBAAsBG,IAAKD,EAAKhC,IAC7C4B,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,uBAAuBE,EAAKE,MAAQ,KACjDN,EAAAhB,EAAAiB,cAAA,SAAIG,EAAKG,OAAS,KAClBP,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,uBAAb,IAAqCE,EAAKI,MAAQ,IAAlD,WCrBKC,ECIK,SAACtC,GAAU,IACrBC,EAAOD,EAAPC,GADqBC,EAELC,mBAAS,IAFJC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEtBK,EAFsBH,EAAA,GAEhBI,EAFgBJ,EAAA,GAIvBK,EAAS,eAAAC,EAAAL,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACO1B,YAAK,UAAA2B,OAAWpB,IADvB,OAGQ,OAFlBe,EADUE,EAAAI,MAGHC,QAAgBf,EAAQQ,EAAST,MAH9B,wBAAAW,EAAAM,SAAAT,MAAH,yBAAAL,EAAAe,MAAAC,KAAAC,YAAA,GAQf,OAFAC,oBAAU,WAAQnB,KAAgB,IAGhCoB,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,gBACbF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,sBACbF,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,uBAAuBxB,EAAKgC,OACzCV,EAAAhB,EAAAiB,cAAA,KAAGC,UAAU,sBAAsBxB,EAAK8B,KAAxC,MAEFR,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,0BAAf,WAEEF,EAAAhB,EAAAiB,cAACU,EAAD,CAAcvC,GAAIA,OCRXwC,EAbS,SAACzC,GAAU,IACzB0C,EAAU1C,EAAV0C,MACR,OACEb,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,qBACbF,EAAAhB,EAAAiB,cAACa,EAAD,CAAa1C,GAAIyC,EAAME,OAAO3C,OCPrBwC","file":"static/js/5.165a9e91.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst options = {\n  baseURL: 'https://jsonplaceholder.typicode.com/',\n};\n\nconst Fetch = axios.create(options);\n\nexport default Fetch;\n","import CommentsList from './comments-list';\n\nexport default CommentsList;\n","import React, { useState, useEffect } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport './comments-list.scss';\nimport Fetch from '../../lib/Fetch';\n\nconst CommentsList = (props) => {\n  const { id } = props;\n  const [data, setData] = useState([]);\n\n  const fetchData = async () => {\n    const response = await Fetch(`/comments?postId=${id}`);\n    // console.log(response);\n    if (response.status === 200) setData(response.data);\n  };\n\n  useEffect(() => { fetchData(); }, []);\n\n  return (\n    <div className=\"comments-list\">\n      {data.map(item => (\n        <div className=\"comments-list__item\" key={item.id}>\n          <p className=\"comments-list__name\">{item.name || '-'}</p>\n          <p>{item.email || '-'}</p>\n          <p className=\"comments-list__body\">\"{item.body || '-'}\"</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nCommentsList.propTypes = {\n  id: T.string.isRequired,\n};\n\nexport default CommentsList;\n","import PostsDetail from './posts-detail';\n\nexport default PostsDetail;\n","import React, { useState, useEffect } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport './posts-detail.scss';\nimport Fetch from '../../lib/Fetch';\nimport CommentsList from '../comments-list';\n\nconst PostsDetail = (props) => {\n  const { id } = props;\n  const [data, setData] = useState({});\n\n  const fetchData = async () => {\n    const response = await Fetch(`/posts/${id}`);\n    // console.log(response);\n    if (response.status === 200) setData(response.data);\n  };\n\n  useEffect(() => { fetchData(); }, []);\n\n  return (\n    <div className=\"posts-detail\">\n      <div className=\"posts-detail__item\">\n        <p className=\"posts-detail__title\">{data.title}</p>\n        <p className=\"posts-detail__body\">{data.body}.</p>\n      </div>\n      <div className=\"posts-detail__comments\">\n        Comments\n        <CommentsList id={id} />\n      </div>\n    </div>\n  );\n};\n\nPostsDetail.propTypes = {\n  id: T.string.isRequired,\n};\n\nexport default PostsDetail;\n","import React from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport './posts-detail-page.scss';\nimport PostsDetail from '../posts-detail';\n\nconst PostsDetailPage = (props) => {\n  const { match } = props;\n  return (\n    <div className=\"posts-detail-page\">\n      <PostsDetail id={match.params.id} />\n    </div>\n  );\n};\n\nPostsDetailPage.propTypes = {\n  match: T.object.isRequired,\n};\n\nexport default PostsDetailPage;\n","import PostsDetailPage from './posts-detail-page';\n\nexport default PostsDetailPage;\n"],"sourceRoot":""}