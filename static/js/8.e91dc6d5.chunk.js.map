{"version":3,"sources":["lib/Fetch.js","components/photos-list/index.js","components/photos-list/photos-list.js","components/photos-page/photos-page.js","components/photos-page/index.js"],"names":["axios__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","Fetch","n","axios","create","baseURL","PhotosList","props","id","_useState","useState","_useState2","Object","slicedToArray","data","setData","fetchData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","concat","sent","status","stop","apply","this","arguments","useEffect","react_default","createElement","className","map","item","react_router_dom","to","key","src","thumbnailUrl","alt","title","albumId","url","PhotosPage","match","components_photos_list","params","Photos"],"mappings":"yFAAA,IAAAA,EAAAC,EAAA,IAMMC,EANND,EAAAE,EAAAH,GAMcI,EAAMC,OAJJ,CACdC,QAAS,0CAKIJ,4KCNAK,ECIG,SAACC,GAAU,IACnBC,EAAOD,EAAPC,GADmBC,EAEHC,mBAAS,IAFNC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEpBK,EAFoBH,EAAA,GAEdI,EAFcJ,EAAA,GAIrBK,EAAS,eAAAC,EAAAL,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACO1B,YAAK,WAAA2B,OAAYpB,EAAZ,sBADZ,OAGQ,OAFlBe,EADUE,EAAAI,MAGHC,QAAgBf,EAAQQ,EAAST,MAH9B,wBAAAW,EAAAM,SAAAT,MAAH,yBAAAL,EAAAe,MAAAC,KAAAC,YAAA,GAQf,OAFAC,oBAAU,WAAQnB,KAAgB,IAGhCoB,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,UAAf,mBACmB9B,EADnB,UAGIM,EAAKyB,IAAI,SAAAC,GAAI,OACXJ,EAAAhB,EAAAiB,cAACI,EAAA,EAAD,CAAMC,GAAE,kBAAAd,OAAoBY,EAAKhC,IAAMmC,IAAKH,EAAKhC,IAC/C4B,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,gBACbF,EAAAhB,EAAAiB,cAAA,OAAKO,IAAKJ,EAAKK,aAAcC,IAAKN,EAAKO,QACvCX,EAAAhB,EAAAiB,cAAA,sBAAcG,EAAKQ,SACnBZ,EAAAhB,EAAAiB,cAAA,gBAAQG,EAAKhC,IACb4B,EAAAhB,EAAAiB,cAAA,mBAAWG,EAAKO,OAChBX,EAAAhB,EAAAiB,cAAA,iBAASG,EAAKS,KACdb,EAAAhB,EAAAiB,cAAA,2BAAmBG,EAAKK,oBCXvBK,EAdI,SAAC3C,GAAU,IACpB4C,EAAU5C,EAAV4C,MACR,OACEf,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,eAAf,aAEEF,EAAAhB,EAAAiB,cAACe,EAAD,CAAY5C,GAAI2C,EAAME,OAAO7C,OCRpB8C","file":"static/js/8.e91dc6d5.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst options = {\n  baseURL: 'https://jsonplaceholder.typicode.com/',\n};\n\nconst Fetch = axios.create(options);\n\nexport default Fetch;\n","import PhotosList from './photos-list';\n\nexport default PhotosList;\n","import React, { useState, useEffect } from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport './photos-list.scss';\nimport { Link } from 'react-router-dom';\nimport Fetch from '../../lib/Fetch';\n\nconst PhotoList = (props) => {\n  const { id } = props;\n  const [data, setData] = useState([]);\n\n  const fetchData = async () => {\n    const response = await Fetch(`/albums/${id}/photos?_limit=10`);\n    // console.log(response);\n    if (response.status === 200) setData(response.data);\n  };\n\n  useEffect(() => { fetchData(); }, []);\n\n  return (\n    <div className=\"photos\">\n      Photos of album {id} Detail\n      {\n        data.map(item => (\n          <Link to={`/photos-detail/${item.id}`} key={item.id}>\n            <div className=\"photos__item\">\n              <img src={item.thumbnailUrl} alt={item.title} />\n              <p>Album ID: {item.albumId}</p>\n              <p>ID: {item.id}</p>\n              <p>Title: {item.title}</p>\n              <p>url: {item.url}</p>\n              <p>Thumbnail Url: {item.thumbnailUrl}</p>\n            </div>\n          </Link>\n        ))\n      }\n    </div>\n  );\n};\n\nPhotoList.propTypes = {\n  id: T.string.isRequired,\n};\n\nexport default PhotoList;\n","import React from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport './photos-page.scss';\nimport PhotosList from '../photos-list';\n\nconst PhotosPage = (props) => {\n  const { match } = props;\n  return (\n    <div className=\"photos-page\">\n      PhotosPage\n      <PhotosList id={match.params.id} />\n    </div>\n  );\n};\n\nPhotosPage.propTypes = {\n  match: T.object.isRequired,\n};\n\nexport default PhotosPage;\n","import Photos from './photos-page';\n\nexport default Photos;\n"],"sourceRoot":""}